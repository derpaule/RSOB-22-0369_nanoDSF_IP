[["Caprin_nanoDSF.html", "nanoDSF and IP data of G3BP1-NTF2 binding to Caprin-1 and USP10 1 Info 2 Analysis of Prometheus stability pH data 2.1 Data import 2.2 pre-plots and analysis 2.3 Supplementary nanoDSF plots 2.4 Lineplot comparison different pH values 2.5 boxplot of differences 2.6 Columnplot of T-differences 2.7 Lineplot concentration-series 2.8 Final Figures nanoDSF 2.9 eSPC analysis of nanoDSF titration data 2.10 export data for comparison 3 Analysis of immunoprecipitation data 3.1 IP plots 3.2 IP stats", " nanoDSF and IP data of G3BP1-NTF2 binding to Caprin-1 and USP10 [Tim Schulte] 1 Info library(ggplot2) library(tidyverse) library(plyr) library(tidyr) library(stringr) library(ggforce) library(readr) library(ggsci) library(knitr) library(bookdown) library(tinytex) library(kableExtra) library(DT) library(xfun) library(readxl) library(vroom) library(metR) library(reshape2) library(misc3d) library(ggforce) library(RColorBrewer) library(ggpubr) library(bsts) library(prospectr) library(ggridges) library(svglite) library(plotly) library(rstatix) nanoDSF Data and immunoprecipitation data as Supplemental data on DRYAD. NanoDSF data were collected as described in the methods section of the associated manuscript. Data were analyzed using the Prometheus software. The preprocessed data are availabe in the associated data folders. This script was only used to import and tidy the data to generate the plots. 2 Analysis of Prometheus stability pH data 2.1 Data import paste_names_f &lt;- function(paste1, paste2){ character_out &lt;- paste(&quot;[^(^&quot;, paste1, paste2, &quot;$)]&quot;, sep = &quot;&quot;) return(character_out) } unlist_PH_string_f &lt;- function(PHlist){ PHstring &lt;- PHlist %&gt;% unlist() %&gt;% as_tibble() %&gt;% dplyr::mutate(., name = paste(&quot;character&quot;, row_number(), sep = &quot;&quot;)) %&gt;% pivot_wider(., names_from = name, values_from = value) %&gt;% unite(&quot;character&quot;, contains(&quot;character&quot;), sep = &quot;&quot;) %&gt;% pull() return(PHstring) } str_replace_all_f &lt;- function(string, pattern){ string_out &lt;- str_replace_all(string, pattern, &quot;&quot;) return(string_out) } addcolumn_f &lt;- function(data, column){ data_out &lt;- data %&gt;% add_column(., column) return(data_out) } ratio_length_f &lt;- function(df){ value_out &lt;- length(df) %&gt;% na_if(0) return(value_out) } plotname_f &lt;- function(collection, id){ name_out &lt;- paste(&quot;./plots_&quot;, collection, &quot;/plot&quot;, id, &quot;.jpeg&quot;, sep =&quot;&quot; ) return(name_out) } plot_derivative_f &lt;- function(data, ip1, ip2, ip3, ip4, ip5, ip6){ ip_tibble &lt;- as_tibble(c(ip1, ip2, ip3, ip4, ip5, ip6)) %&gt;% dplyr::mutate(., ip = row_number()) plot_out &lt;- ggplot() +geom_line(data = data,aes(x=Temp, y=ratio)) + geom_vline(data = ip_tibble, aes(xintercept = value, colour = as_factor(ip))) + theme_minimal() return(plot_out) } rawplotname_f &lt;- function(collection, id){ name_out &lt;- paste(&quot;./rawplots_&quot;, collection, &quot;/rawplot&quot;, id, &quot;.jpeg&quot;, sep =&quot;&quot; ) return(name_out) } PHvalues &lt;- tribble(~PHstring, ~PHvalues, c(&quot;_PH74__&quot;, &quot;_PH50__&quot;, &quot;_PH60__&quot;, &quot;_PH51__&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7.5&quot;, &quot;8.5&quot;, &quot; 7.5to5&quot;, &quot; 6to5&quot;, &quot;2_ph5&quot;, &quot;2_ph6&quot;, &quot; 5&quot;, &quot; 5&quot;, &quot;PH56&quot;,&quot;PH50&quot;, &quot;PH61&quot;, &quot;PH74&quot;), c(7.5, 5.1, 6, 5.1, 5.1, 6, 7.5, 8.5, 5.1, 5.1, 5.1, 6, 5.1, 5.1, 5.6, 5.1, 6, 7.5)) PHvalues &lt;- PHvalues %&gt;% unnest(., cols = c(&quot;PHstring&quot;, &quot;PHvalues&quot;)) promethues_list = list.files(path = &quot;./data_prometheus&quot;, pattern = &quot;*&quot;, recursive = TRUE, include.dirs = TRUE, full.names = TRUE) promethues_list.tib &lt;- as_tibble(promethues_list) prometheus_coladd &lt;- tribble(~filtername, ~datasetid, ~range, ~colnames, ~collection, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 1, &quot;A2:J9&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;onset&quot;, &quot;ip1&quot;), &quot;TS1&quot;, &quot;202009xNTF2xUSPCAPxPHxH31AxPROCESSEDx330nm.xlsx&quot;, 1, &quot;A2:J42&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;ip1&quot;, &quot;ip2&quot;), &quot;TS1&quot;, &quot;202009xNTF2xUSPCAPxPHx01xPROCESSEDx330nm.xlsx&quot;, 1, &quot;A2:J49&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;ip1&quot;, &quot;ip2&quot;), &quot;TS2&quot;, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, 1, &quot;A2:N47&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;ip1&quot;, &quot;ip2&quot;,&quot;ip3&quot;, &quot;ip4&quot;,&quot;ip5&quot;, &quot;ip6&quot;), &quot;XH1&quot;, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, 1, &quot;A2:N43&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;ip1&quot;, &quot;ip2&quot;,&quot;ip3&quot;, &quot;ip4&quot;,&quot;ip5&quot;, &quot;ip6&quot;), &quot;XH1&quot;, &quot;20220409xNTF2YYxPROCESSEDx330nm.xlsx&quot;, 1, &quot;A2:L11&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;ip1&quot;, &quot;ip2&quot;,&quot;ip3&quot;, &quot;ip4&quot;), &quot;XH1&quot;, &quot;20220429_CAP_TITRATION_330PROCESSED.xlsx&quot;, 1, &quot;A2:L49&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;ip1&quot;, &quot;ip2&quot;,&quot;ip3&quot;, &quot;ip4&quot;), &quot;XH2&quot;, &quot;20220429_USP_TITRATION_330PROCESSED.xlsx&quot;, 1, &quot;A2:L49&quot;, c(&quot;capillary&quot;, &quot;sampleID&quot;, &quot;power&quot;, &quot;Tstart&quot;, &quot;Tend&quot;, &quot;Tslope&quot;, &quot;Start&quot;, &quot;duration&quot;, &quot;ip1&quot;, &quot;ip2&quot;,&quot;ip3&quot;, &quot;ip4&quot;), &quot;XH2&quot;, ) filter_files &lt;- prometheus_coladd %&gt;% dplyr::select(., filtername) %&gt;% dplyr::mutate(., id = row_number()) %&gt;% dplyr::mutate(., idname = paste(&quot;filename&quot;, id, sep = &quot;&quot;)) %&gt;% dplyr::select(., -id) %&gt;% pivot_wider(., names_from = c(&quot;idname&quot;), values_from = &quot;filtername&quot;) %&gt;% unite(., string, everything(), sep =&quot;|&quot;) %&gt;% pull() prometheus_data.tib &lt;- promethues_list.tib %&gt;% dplyr::mutate(., filterme = str_detect(value, filter_files), filtername = str_extract(value, filter_files)) %&gt;% dplyr::filter(., filterme == TRUE) sort_names &lt;- tribble(~collection, ~NTF2names, ~DMSO, ~Lignames, &quot;TS1&quot;, &quot;NTF2|NTF|H31A|NONE&quot;, &quot;D4&quot;, &quot;CAP[:digit:][:digit:]|USP[:digit:][:digit:]|NONE&quot;, &quot;TS2&quot;, &quot;NTF2|NTF|H31A|NONE&quot;, &quot;D4&quot;, &quot;CAP[:digit:][:digit:]|USP[:digit:][:digit:]|NONE&quot;, &quot;XH1&quot;, &quot;NTF|YY|H31A&quot;, &quot;D4&quot;, &quot;CAP|USP&quot;, &quot;XH2&quot;, &quot;NTF&quot;, &quot;D4&quot;, &quot;((CAP)(.){1,10})(?=(ph))|((USP)(.){1,10})(?=(ph))&quot;) sort_names &lt;- sort_names %&gt;% dplyr::mutate(., selectpH = paste(NTF2names, DMSO,Lignames, sep = &quot;|&quot; )) prometheus_coladd &lt;- prometheus_coladd %&gt;% left_join(., sort_names) NTF2group_tib &lt;- tribble(~NTF2, ~NTF2group, &quot;NTF2&quot;, &quot;aWT&quot;, &quot;NTF&quot;, &quot;aWT&quot;, &quot;H31A&quot;, &quot;bH31A&quot;, &quot;YY&quot;, &quot;cH31YH62Y&quot;, &quot;NONE&quot;, &quot;dNONE&quot;) ligandgroup_tib &lt;- tribble(~ligandshort, ~ligandgroup, &quot;NONE&quot;, &quot;aNONE&quot;, &quot;USP&quot;, &quot;bUSP&quot;, &quot;CAP&quot;, &quot;cCAP&quot;) LIGcolor_scale &lt;- tribble(~name, ~value, c( &quot;aNONE&quot;, &quot;bUSP&quot;, &quot;cCAP&quot;, &quot;scale&quot;), c(&quot;#D1D1D1&quot; ,&quot;#B9C9AD&quot;,&quot;#3FC6D8&quot;, &quot;#FFFFFF00&quot;)) %&gt;% unnest(., name, value) %&gt;% deframe() concentrations_tib &lt;- tribble(~conc_string, ~conc_uM, c(&quot;&quot;, &quot;01&quot;, &quot;02&quot;, &quot;03&quot;, &quot;04&quot;, &quot;05&quot;, &quot;06&quot;, &quot;07&quot;, &quot;08&quot;, &quot;09&quot;, &quot;10&quot;, &quot;11&quot;, &quot;_200&quot;, &quot;_100&quot;, &quot;_50&quot;, &quot;_25&quot;, &quot;_12.5&quot;, &quot;_6.25&quot;, &quot;_3.625&quot;, &quot;_1.8&quot;, &quot;_0.9&quot;, &quot;_0.45&quot;, &quot;_0.225&quot;, &quot;_0.11&quot;), c(200, (800/(2^seq(1,11,by=1))), (400/(2^seq(1,12,by=1))))) concentrations_tib &lt;- concentrations_tib %&gt;% unnest(., cols = c(&quot;conc_string&quot;, &quot;conc_uM&quot;)) #sedphat_columns &lt;- sedphat_columns %&gt;% dplyr::mutate(., datasets_seq = purrr::map(datasets, ~seq_along_c(.))) %&gt;% unnest(., cols = &quot;datasets_seq&quot;) %&gt;% left_join(., sedphat_coladd) %&gt;% dplyr::select(., folder, datasetid = value, range, colnames) prometheus_data.tib &lt;- prometheus_data.tib %&gt;% left_join(., prometheus_coladd) %&gt;% dplyr::mutate(., data = purrr::pmap(list(value, datasetid, range, colnames), read_xlsx)) prometheus_data_ratio.pretib &lt;- prometheus_data.tib %&gt;% dplyr::select(., value, filtername, data, collection, NTF2names, Lignames, selectpH) %&gt;% dplyr::mutate(., meas_type = str_extract(filtername, pattern = c(&quot;330&quot;))) %&gt;% unnest(., cols = c(&quot;data&quot;)) %&gt;% drop_na(., capillary) %&gt;% dplyr::mutate(., cap1 = case_when(capillary &lt; 25 ~ capillary+2, TRUE ~ 1), cap2 = case_when(cap1 == 1 ~ capillary-24, TRUE ~ 27)) %&gt;% dplyr::mutate(., letter1 = LETTERS[cap1], letter2 = LETTERS[cap2]) %&gt;% unite(., &quot;rangeletters&quot;, contains(&quot;letter&quot;), sep = &quot;&quot;, na.rm = TRUE) %&gt;% dplyr::mutate(., range = paste(rangeletters, toString(4),&quot;:&quot;, rangeletters, toString(5000), sep = &quot;&quot;), sheet = 5, sheet_raw = 4) %&gt;% dplyr::mutate(., wv330dev = purrr::pmap(list(value, sheet, range, c(&quot;ratio&quot;)), read_xlsx), Temp = purrr::pmap(list(value, sheet, &quot;B4:B5000&quot;, c(&quot;Temp&quot;)), read_xlsx), wv330raw = purrr::pmap(list(value, sheet_raw, range, c(&quot;ratio&quot;)), read_xlsx)) %&gt;% dplyr::mutate(., NTF2 = str_extract(sampleID, NTF2names), ligand = str_extract(sampleID, Lignames)) %&gt;% dplyr::mutate(., NTF2Lig = purrr::pmap(list( NTF2, ligand), paste_names_f)) %&gt;% unnest(., c(&quot;NTF2Lig&quot;)) %&gt;% dplyr::mutate(., PHstring = purrr::pmap(list(sampleID, selectpH), str_replace_all_f )) prometheus_data_ratio.tib &lt;- prometheus_data_ratio.pretib %&gt;% replace_na(., list(ligand = &quot;NONE&quot;)) %&gt;% dplyr::mutate(., conc_string = str_replace_all(ligand, &quot;USP|CAP|NONE&quot;, &quot;&quot;)) %&gt;% left_join(., concentrations_tib) %&gt;% unnest(., PHstring) %&gt;% left_join(., PHvalues) %&gt;% left_join(., NTF2group_tib) %&gt;% dplyr::mutate(., ligandshort = str_extract(ligand, &quot;(USP)|(CAP)|(NONE)&quot;)) %&gt;% left_join(., ligandgroup_tib) %&gt;% group_by(., collection) %&gt;% dplyr::arrange(., NTF2group, ligandgroup, PHvalues, conc_uM) %&gt;% dplyr::mutate(., rowid = row_number()) %&gt;% ungroup() %&gt;% dplyr::mutate(., plotname = purrr::pmap(list(collection, rowid), plotname_f), rawplotname = purrr::pmap(list(collection, rowid), rawplotname_f)) %&gt;% dplyr::mutate(., data = purrr::pmap(list(Temp, wv330dev), addcolumn_f), data_raw = purrr::pmap(list(Temp, wv330raw), addcolumn_f)) %&gt;% dplyr::mutate(., data_test = purrr::pmap(list(wv330dev), ratio_length_f)) %&gt;% unnest(., data_test) %&gt;% drop_na(., data_test) %&gt;% dplyr::mutate(., dataplot = purrr::pmap(list(data, ip1, ip2, ip3, ip4, ip5, ip6), plot_derivative_f), rawdata_plot = purrr::pmap(list(data_raw, ip1, ip2, ip3, ip4, ip5, ip6), plot_derivative_f)) 2.2 pre-plots and analysis Plotting all data in folders to confirm/reject Tm-values. In folders plots_TS1, plots_TS2, plots_XH1 and plots_XH2. this chunk is not run in Rmarkdown. plot_directories &lt;- prometheus_data_ratio.tib %&gt;% dplyr::select(contains(&quot;plotname&quot;)) %&gt;% unnest(., everything()) %&gt;% pivot_longer(., everything()) %&gt;% separate(., value, into = c(&quot;dot&quot;, &quot;folder&quot;, &quot;plot&quot;), sep =&quot;/&quot;) %&gt;% unite(., &quot;foldername&quot;, c(dot, folder), sep = &quot;/&quot;) %&gt;% dplyr::select(., foldername) %&gt;% unique() pwalk(list(plot_directories$foldername),dir.create) pwalk(list(prometheus_data_ratio.tib$plotname, prometheus_data_ratio.tib$dataplot), ggsave) pwalk(list(prometheus_data_ratio.tib$rawplotname, prometheus_data_ratio.tib$rawdata_plot), ggsave) here went through the plots in the folders and checked manually for the position with the help of plotly. Simply run in commandline in Rstudio. not run in Rmarkdown. prometheus_data_ratio.tib %&gt;% dplyr::filter(., collection == &quot;TS1&quot;, rowid == 1) %&gt;% .$dataplot ggplotly() prometheus_data_ratio.tib %&gt;% dplyr::filter(., collection == &quot;TS1&quot;, rowid == 1) %&gt;% dplyr::select(., capillary, filtername) ip_standard &lt;- tribble(~collection, ~ip_standard, &quot;TS1&quot;, &quot;ip1&quot;, &quot;TS2&quot;, &quot;ip1&quot;, &quot;XH1&quot;, &quot;ip1&quot;, &quot;XH2&quot;, &quot;ip1&quot;) ip_selected &lt;- tribble(~collection, ~capillary, ~filtername, ~ip_selected, &quot;TS1&quot;, 1, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;TS1&quot;, 2, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;TS1&quot;, 3, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;TS1&quot;, 4, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;TS1&quot;, 5, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;TS1&quot;, 6, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;TS1&quot;, 7, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;TS2&quot;, 4, &quot;202009xNTF2xUSPCAPxPHx01xPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 13, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 14, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 15, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 16, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 17, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 18, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 19, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 20, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 21, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 38, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 25, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 26, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 23, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 24, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 27, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 39, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 25, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 26, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 27, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 28, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 29, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 30, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 31, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 32, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 34, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 33, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 34, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 41, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip2&quot;, &quot;XH1&quot;, 42, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 35, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 36, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 43, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 40, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip7&quot;, &quot;XH1&quot;, 41, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 42, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 1, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 2, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 3, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 4, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 5, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 6, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 7, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 8, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 9, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 10, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 11, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip4&quot;, &quot;XH1&quot;, 12, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 9, &quot;20220409xNTF2YYxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH1&quot;, 10, &quot;20220409xNTF2YYxPROCESSEDx330nm.xlsx&quot;, &quot;ip3&quot;, &quot;XH2&quot;, 7, &quot;20220429_USP_TITRATION_330PROCESSED.xlsx&quot;, &quot;ip7&quot;, &quot;XH2&quot;, 8, &quot;20220429_USP_TITRATION_330PROCESSED.xlsx&quot;, &quot;ip7&quot;) value_corrected &lt;- tribble(~collection, ~capillary, ~filtername, ~ip7, &quot;TS1&quot;, 1, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 31.3, &quot;TS1&quot;, 2, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 32, &quot;TS1&quot;, 3, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 45.8, &quot;TS1&quot;, 4, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 46.4, &quot;TS1&quot;, 5, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 51, &quot;TS1&quot;, 6, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 51, &quot;TS1&quot;, 7, &quot;202008xNTF2xPHxPROCx330nm.xlsx&quot;, 55.8, &quot;TS2&quot;, 4, &quot;202009xNTF2xUSPCAPxPHx01xPROCESSEDx330nm.xlsx&quot;, NA, &quot;XH1&quot;, 38, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, 49.3, &quot;XH1&quot;, 25, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, NA, &quot;XH1&quot;, 26, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, NA, &quot;XH1&quot;, 39, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, 44.5, &quot;XH1&quot;, 25, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, 34.5, &quot;XH1&quot;, 34, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, NA, #&quot;XH1&quot;, 41, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, NA, #&quot;XH1&quot;, 42, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;,NA, &quot;XH1&quot;, 35, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;,NA, &quot;XH1&quot;, 36, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;,NA, &quot;XH1&quot;, 43, &quot;20220407xNTF2xUSPCAPxPROCESSEDx330nm.xlsx&quot;, NA, &quot;XH1&quot;, 40, &quot;20220408xNTF2YYxUSPCAPxPROCESSEDx330nm.xlsx&quot;, NA, &quot;XH2&quot;, 7, &quot;20220429_USP_TITRATION_330PROCESSED.xlsx&quot;, 42.6, &quot;XH2&quot;, 8, &quot;20220429_USP_TITRATION_330PROCESSED.xlsx&quot;, 40.8) prometheus_data_ratio_sel.tib &lt;- prometheus_data_ratio.tib %&gt;% dplyr::select(., collection, filtername, capillary, rowid, NTF2group, ligandgroup, PHvalues, conc_uM, contains(&quot;ip&quot;), data) %&gt;% left_join(., ip_standard) %&gt;% left_join(ip_selected) %&gt;% left_join(., value_corrected) %&gt;% replace_na(., list(ip_selected = &quot;replaceme&quot;)) %&gt;% dplyr::mutate(., ip_select = case_when(ip_selected == &quot;replaceme&quot; ~ ip_standard, TRUE ~ ip_selected)) %&gt;% dplyr::mutate(., ip_value = case_when(ip_select == &quot;ip1&quot; ~ ip1, ip_select == &quot;ip2&quot; ~ ip2, ip_select == &quot;ip3&quot; ~ ip3, ip_select == &quot;ip4&quot; ~ ip4, ip_select == &quot;ip5&quot; ~ ip5, ip_select == &quot;ip6&quot; ~ ip6, ip_select == &quot;ip7&quot; ~ ip7, TRUE ~ 0)) 2.3 Supplementary nanoDSF plots prometheus_data_ratio_sel_Der &lt;- prometheus_data_ratio_sel.tib %&gt;% dplyr::mutate(., plotgroup = paste(NTF2group, ligandgroup, PHvalues, conc_uM, rowid, collection, sep = &quot;&quot;)) %&gt;% dplyr::filter(., conc_uM &gt; 150, collection == &quot;XH1&quot; | collection == &quot;XH2&quot;) %&gt;% drop_na(., ip_value) prometheus_data_ratio_sel_plotDer &lt;- prometheus_data_ratio_sel_Der %&gt;% unnest(., data) %&gt;% dplyr::filter(., Temp &lt; 70) %&gt;% ggplot(., aes(x=Temp, y=ratio, colour = factor(PHvalues), group = plotgroup)) + geom_line() + theme_minimal() + facet_grid(ligandgroup+PHvalues ~ NTF2group, scales = &quot;free_y&quot;) ggsave(&quot;./prometheus_selDer.jpeg&quot;, prometheus_data_ratio_sel_plotDer, device=&quot;jpeg&quot;, width = 160, height = 240, units = c(&quot;mm&quot;)) ggsave(&quot;./prometheus_selDer.ps&quot;, prometheus_data_ratio_sel_plotDer, device=&quot;ps&quot;, width = 160, height = 240, units = c(&quot;mm&quot;)) prometheus_data_ratio_sel_PlotDataPoints &lt;- prometheus_data_ratio_sel_Der %&gt;% dplyr::mutate(., Temp = ip_value) %&gt;% ggplot(., aes(x=Temp, y=PHvalues, colour = factor(PHvalues), group = plotgroup)) + geom_point() + theme_minimal() + coord_cartesian(xlim = c(20,70), ylim = c(9,4)) + scale_y_reverse() + facet_grid(ligandgroup ~ NTF2group, scales = &quot;free_y&quot;) ggsave(&quot;./prometheus_selPoints.jpeg&quot;, prometheus_data_ratio_sel_PlotDataPoints, device=&quot;jpeg&quot;, width = 160, height = 90, units = c(&quot;mm&quot;)) ggsave(&quot;./prometheus_selPoints.ps&quot;, prometheus_data_ratio_sel_PlotDataPoints, device=&quot;ps&quot;, width = 160, height = 90, units = c(&quot;mm&quot;)) prometheus_data_ratio_sel_PlotDataPointsComb &lt;- egg::ggarrange(prometheus_data_ratio_sel_plotDer, prometheus_data_ratio_sel_PlotDataPoints, nrow = 2, byrow = TRUE, heights = c(4,1)) ggsave(file=&quot;prometheus_selPoints_combined.jpeg&quot;, plot=prometheus_data_ratio_sel_PlotDataPointsComb,device=&quot;jpeg&quot;, width = 160, height = 240, units = c(&quot;mm&quot;)) ggsave(file=&quot;prometheus_selPoints_combined.ps&quot;, plot=prometheus_data_ratio_sel_PlotDataPointsComb,device=&quot;ps&quot;, width = 160, height = 240, units = c(&quot;mm&quot;)) nanoDSF 1st derivative and Tm value plots, assembled for Supplementary Figure S6. 2.4 Lineplot comparison different pH values selected for ms. prometheus_T_preboxplot &lt;- prometheus_data_ratio_sel.tib %&gt;% dplyr::mutate(., boxgroup = paste(NTF2group, PHvalues, ligandgroup, collection, sep = &quot;_&quot;)) %&gt;% dplyr::filter(., conc_uM &gt; 150, collection == &quot;XH1&quot; | collection == &quot;XH2&quot;) # %&gt;% dplyr::select(., sampleID, capillary, ip_value) prometheus_T_preboxplot_mean &lt;- prometheus_T_preboxplot %&gt;% dplyr::mutate(., linegroup = paste(NTF2group, PHvalues, ligandgroup, sep = &quot;_&quot;)) %&gt;% group_by(., linegroup, PHvalues, NTF2group, ligandgroup) %&gt;% dplyr::summarize(., ip_sd = sd(ip_value, na.rm = TRUE), ip_value = mean(ip_value, na.rm = TRUE), ip_max = ip_value+ip_sd, ip_min = ip_value-ip_sd) #%&gt;% dplyr::arrange(., meas_type, pHvalue, NTF2group, boxgroup ) prometheus_T_line_preplot &lt;- prometheus_T_preboxplot %&gt;% dplyr::mutate(., linegroup = paste(NTF2group, PHvalues, ligandgroup, sep = &quot;_&quot;)) prometheus_T_lineplot &lt;- ggplot() + geom_point(data = prometheus_T_preboxplot_mean, aes(x = PHvalues, y = ip_value, group = linegroup, colour = ligandgroup), size = 2) + geom_line(data = prometheus_T_preboxplot_mean, aes(x = PHvalues, y = ip_value, colour = ligandgroup), size = 1) + geom_linerange(data = prometheus_T_preboxplot_mean, aes(x = PHvalues, ymin = ip_min, ymax = ip_max , colour = ligandgroup)) + #scale_shape_manual(values = c(1,2)) + #geom_jitter(aes(colour = factor(meas_type)), stat = &quot;identity&quot;, width = 0.1) + #facet_grid(. ~ ., scales = &quot;free_y&quot;) + #scale_color_manual(values = ) #cale_color_aaas() + scale_color_manual(values = LIGcolor_scale) + scale_fill_manual(values = LIGcolor_scale) + #scale_x_discrete() + scale_y_continuous(name = &quot;Temperature: °C&quot;) + coord_cartesian(xlim = c(4.5,9), ylim = c(25, 65)) + #coord_cartesian() + theme_light() + #scale_color_grey() + #scale_fill_grey() + #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(. ~ NTF2group) print(prometheus_T_lineplot) ggsave(&quot;./prometheus_T_lineplot.jpeg&quot;, prometheus_T_lineplot, device=&quot;jpeg&quot;, width = 120, height = 40, units = c(&quot;mm&quot;)) ggsave(&quot;./prometheus_T_lineplot.ps&quot;, prometheus_T_lineplot, device=&quot;ps&quot;, width = 120, height = 40, units = c(&quot;mm&quot;)) dTm values at the tested pH values, for Figure 4. 2.5 boxplot of differences prometheus_T_diff_preboxplot &lt;- prometheus_T_preboxplot %&gt;% dplyr::mutate(., linegroup = paste(NTF2group, PHvalues, ligandgroup, sep = &quot;_&quot;)) %&gt;% group_by(., linegroup, PHvalues, NTF2group, ligandgroup) prometheus_T_diff_sub &lt;- prometheus_T_diff_preboxplot %&gt;% dplyr::summarize(., ip_mean = mean(ip_value, na.rm =TRUE), ip_sd = sd(ip_value, na.rm = TRUE)) %&gt;% ungroup(.) #%&gt;% dplyr::select(., -ligand) prometheus_T_norm &lt;- prometheus_T_diff_sub %&gt;% dplyr::filter(., ligandgroup == &quot;aNONE&quot;) %&gt;% ungroup() %&gt;% dplyr::select(., PHvalues, NTF2group, ip_norm = ip_mean) prometheus_T_diff_preboxplot &lt;- prometheus_T_diff_preboxplot %&gt;% left_join(., prometheus_T_norm) %&gt;% dplyr::mutate(., ip_diff = ip_value - ip_norm) %&gt;% dplyr::select(., ip_diff) #%&gt;% 2.6 Columnplot of T-differences prometheus_T_diff_precolpolot &lt;- prometheus_T_diff_preboxplot %&gt;% dplyr::select(., ip_diff) prometheus_T_mean_precolpolot &lt;- prometheus_T_diff_precolpolot %&gt;% drop_na(., ip_diff) %&gt;% dplyr::summarize(., ip_sd = sd(ip_diff, na.rm = TRUE), ip_diff = mean(ip_diff, na.rm =TRUE), ip_min = ip_diff - ip_sd, ip_max = ip_diff + ip_sd, nexp = n()) %&gt;% ungroup() prometheus_Tdiff_colplot &lt;- ggplot() + geom_col(data = prometheus_T_mean_precolpolot, aes(x = PHvalues, y = ip_diff, fill = factor(ligandgroup), group = linegroup), position = &quot;dodge&quot;, colour = &quot;black&quot;) + #geom_jitter(data = prometheus_T_mean_precolpolot %&gt;% dplyr::filter(., ligandgroup != &quot;aNONE&quot;) ,aes(x = factor(PHvalues), y = ip_diff, colour = factor(ligandgroup)), stat = &quot;identity&quot;, width = 0.1, shape = 21, size = 2, fill = &quot;white&quot;) + geom_errorbar(data = prometheus_T_mean_precolpolot, aes(x = PHvalues, ymin = ip_min, ymax = ip_max, group = linegroup), position = &quot;dodge&quot;, size = 0.5) + #facet_grid(. ~ ., scales = &quot;free_y&quot;) + #scale_color_manual(values = ) #scale_fill_aaas() + scale_color_manual(values = LIGcolor_scale) + scale_fill_manual(values = LIGcolor_scale) + #scale_x_discrete() + coord_cartesian(xlim = c(4.5,9)) + scale_y_continuous(name = &quot;DTemperature: °C&quot;) + #coord_cartesian() + theme_light() + #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(. ~ NTF2group) print(prometheus_Tdiff_colplot) ggsave(&quot;./prometheus_Tdiff_colplot.jpeg&quot;, prometheus_Tdiff_colplot, device=&quot;jpeg&quot;, width = 160, height = 60, units = c(&quot;mm&quot;)) ggsave(&quot;./prometheus_Tdiff_colplot.ps&quot;, prometheus_Tdiff_colplot, device=&quot;ps&quot;, width = 160, height = 60, units = c(&quot;mm&quot;)) (ligand-apo)dTm values at the tested pH values, for Figure 4. 2.7 Lineplot concentration-series prometheus_Tconc_line_preplot &lt;- prometheus_data_ratio_sel.tib %&gt;% dplyr::filter(collection == &quot;XH2&quot;) prometheus_Tconc_line_mean &lt;- prometheus_Tconc_line_preplot %&gt;% dplyr::group_by(., NTF2group, ligandgroup, PHvalues) %&gt;% dplyr::filter(., conc_uM &lt; 1) %&gt;% dplyr::summarize(., ip_min = mean(ip_value, na.rm = TRUE)) prometheus_Tconc_line_preplot &lt;- prometheus_Tconc_line_preplot %&gt;% left_join(., prometheus_Tconc_line_mean) %&gt;% dplyr::mutate(., ip_diff = ip_value - ip_min) panel_tribble &lt;- tribble(~ligandgroup, ~panelid, ~PHvalues, c(&quot;aNONE&quot;, &quot;bUSP&quot;, &quot;cCAP&quot;), &quot;Titration&quot;, 5.1) %&gt;% unnest(ligandgroup) prometheus_Tconc_line_preplot_selected &lt;- prometheus_Tconc_line_preplot %&gt;% ungroup() %&gt;% dplyr::filter(., PHvalues &lt; 5.2) %&gt;% dplyr::full_join(., panel_tribble) prometheus_Tconc_lineplot &lt;- ggplot(data = prometheus_Tconc_line_preplot_selected, aes(x = conc_uM, y = ip_diff, colour = ligandgroup), size =1.5) + geom_point() + geom_line(data = . %&gt;% dplyr::group_by(., NTF2group, ligandgroup, PHvalues, conc_uM, panelid) %&gt;% dplyr::summarize(., ip_diff = mean(ip_diff), na.rm = TRUE), size = 1) + #geom_line(aes(group = linegroup)) + #scale_shape_manual(values = c(1,2)) + #geom_jitter(aes(colour = factor(meas_type)), stat = &quot;identity&quot;, width = 0.1) + #facet_grid(. ~ ., scales = &quot;free_y&quot;) + #scale_color_manual(values = ) #cale_color_aaas() + scale_color_manual(values = LIGcolor_scale) + scale_fill_manual(values = LIGcolor_scale) + #scale_x_discrete() + scale_x_log10() + scale_y_continuous(name = &quot;Temperature: °C&quot;) + coord_cartesian(xlim = c(0.5, 200) , ylim = c(-5, 20)) + #coord_cartesian() + theme_light() + theme(legend.position = &quot;null&quot;) + #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(PHvalues ~ panelid) ggsave(&quot;./prometheus_Tconc_lineplot.jpeg&quot;, prometheus_Tconc_lineplot, device=&quot;jpeg&quot;, width = 45, height = 50, units = c(&quot;mm&quot;)) ggsave(&quot;./prometheus_Tconc_lineplot.ps&quot;, prometheus_Tconc_lineplot, device=&quot;ps&quot;, width = 45, height = 50, units = c(&quot;mm&quot;)) Change of Tm versus ligand concentration, for Figure 4. Titration data were obtained at two pH-values of 5.1 and 6, but the absolute stabilization effect of Caprin-1 binding was very low, not allowing us to derive affinity values confidently. Therefore we only selected the stabilization data at pH 5.1 following the guidelines and isothermal analysis strategy suggested by EMBL. 2.8 Final Figures nanoDSF 2.8.1 main #prometheus_Tdiff_colplot_ggplot &lt;- ggpubr::ggarrange(prometheus_T_lineplot, prometheus_Tdiff_colplot, nrow = 2, ncol = 1, legend = &quot;none&quot;, heights = c(1,1), align = &quot;hv&quot;) prometheus_Tdiff_colplot_ggplot &lt;- egg::ggarrange(prometheus_T_lineplot, prometheus_Tdiff_colplot, nrow = 2, byrow = TRUE, heights = c(1,1)) ggsave(file=&quot;prometheus_Tdiff_colplot_arranged.jpeg&quot;, plot=prometheus_Tdiff_colplot_ggplot,device=&quot;jpeg&quot;, width = 150, height = 90, units = c(&quot;mm&quot;)) ggsave(file=&quot;prometheus_Tdiff_colplot_arranged.ps&quot;, plot=prometheus_Tdiff_colplot_ggplot,device=&quot;ps&quot;, width = 150, height = 90, units = c(&quot;mm&quot;)) Pre-assembled plots for Figure 4. 2.9 eSPC analysis of nanoDSF titration data Titration data were analysed following the guidelines and analysis pipelines suggested by EMBL. the analysed data were imported for visualization. eSPC_list = list.files(path = &quot;./data_eSPC&quot;, pattern = &quot;*&quot;, recursive = TRUE, include.dirs = TRUE, full.names = TRUE) eSPC_list.tib &lt;- as_tibble(eSPC_list) eSPC_colnames &lt;- tribble(~filename, ~type, &quot;Fitted_Parameters_FractionUnfolded.csv&quot;, &quot;paramters&quot;, &quot;fraction_unfolded_data.csv&quot;, &quot;data&quot;, &quot;fraction_unfolded_fitting_data.csv&quot;, &quot;fit&quot; ) eSPC_data.tib &lt;- eSPC_list.tib %&gt;% dplyr::mutate(., filterme = str_detect(value, &quot;Fitted_Parameters_FractionUnfolded|fraction_unfolded_data|fraction_unfolded_fitting_data&quot;)) %&gt;% separate(., value, into = c(&quot;dot&quot;, &quot;folder&quot;, &quot;sample&quot;, &quot;filename&quot;), sep = &quot;\\\\/&quot;, remove=FALSE) %&gt;% dplyr::filter(., filterme == TRUE) %&gt;% dplyr::mutate(., imported = purrr::map(value, ~vroom(.))) %&gt;% left_join(.,eSPC_colnames) %&gt;% dplyr::select(., sample, imported, type) %&gt;% pivot_wider(., values_from = imported, names_from = type) eSPC_preplot.tib &lt;- eSPC_data.tib %&gt;% separate(., sample, into = c(&quot;dataset&quot;, &quot;ligand&quot;, &quot;pHstring&quot;, &quot;meas_type&quot;)) %&gt;% dplyr::mutate(., NTF2 = &quot;NTF2&quot;) %&gt;% dplyr::mutate(., boxgroup = paste(NTF2, pHstring, ligand, meas_type, sep = &quot;_&quot;)) %&gt;% dplyr::mutate(., NTF2group = case_when(NTF2 == &quot;NTF2&quot; ~ &quot;aNTF2&quot;, NTF2 == &quot;H31A&quot; ~ &quot;bH31A&quot;, TRUE ~ &quot;c&quot;) ) %&gt;% dplyr::mutate(., ligandex = str_extract(ligand, &quot;CAP|USP|NONE&quot;)) %&gt;% dplyr::mutate(., ligandgroup = case_when(ligandex == &quot;NONE&quot; ~ &quot;aNONE&quot;, ligandex == &quot;USP&quot; ~ &quot;bUSP&quot;, ligandex == &quot;CAP&quot; ~ &quot;cCAP&quot;), linegroup = paste(NTF2, pHstring, ligandgroup, meas_type, sep = &quot;_&quot;)) eSPC_sel_preplot.tib &lt;- eSPC_preplot.tib %&gt;% dplyr::filter(., dataset == &quot;data2&quot;, pHstring == &quot;PH5&quot;) eSPC_Tconc_lineplot &lt;- ggplot() + geom_point(data = eSPC_sel_preplot.tib %&gt;% dplyr::select(., -paramters, -fit) %&gt;% unnest(., data), aes(x = conc, y = fu, group = ts, colour = ts)) + geom_line(data = eSPC_sel_preplot.tib %&gt;% dplyr::select(., -paramters, -data) %&gt;% unnest(., fit), aes(x = conc, y = fu, group = ts, colour = ts)) + #geom_point(aes(group = linegroup)) + #scale_shape_manual(values = c(1,2)) + #geom_jitter(aes(colour = factor(meas_type)), stat = &quot;identity&quot;, width = 0.1) + #facet_grid(. ~ ., scales = &quot;free_y&quot;) + #scale_color_manual(values = ) #cale_color_aaas() + #scale_color_grey() + #scale_x_discrete() + scale_x_log10() + scale_y_continuous(name = &quot;fu&quot;) + #coord_cartesian(ylim = c(30, 60)) + #coord_cartesian() + theme_light() + #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(pHstring ~ ligandgroup, scales = &quot;free_y&quot;) print(eSPC_Tconc_lineplot) ggsave(&quot;./eSPC_lineplot.jpeg&quot;, eSPC_Tconc_lineplot, device=&quot;jpeg&quot;, width = 120, height = 90, units = c(&quot;mm&quot;)) ggsave(&quot;./eSPC_lineplot.ps&quot;, eSPC_Tconc_lineplot, device=&quot;ps&quot;, width = 120, height = 90, units = c(&quot;mm&quot;)) Change of Tm versus ligand concentration, for Figure 4. Titration data were obtained at two pH-values of 5.1 and 6, but the absolute stabilization effect of Caprin-1 binding was very low, not allowing us to derive affinity values confidently. Therefore we only selected the stabilization data at pH 5.1 following the guidelines and analysis pipelines suggested by EMBL. eSPC_Tconc_kds_plot &lt;- ggplot() + geom_point(data = eSPC_sel_preplot.tib %&gt;% dplyr::mutate(parameters = purrr::map(paramters, ~dplyr::select(., everything(), Kd = contains(&quot;Kd&quot;)))) %&gt;% dplyr::select(., -data, -fit, -paramters) %&gt;% unnest(., parameters), aes(x = ligand, y = Kd, group = temperature, colour = temperature)) + scale_y_log10(name = &quot;Kd /uM&quot;, labels = function(breaks) ((breaks*10^6))) + #scale_y_continuous(name = &quot;Kd&quot;) + #coord_cartesian(ylim = c(30, 60)) + #coord_cartesian() + theme_light() + #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(pHstring ~ ligandgroup, scales = &quot;free_y&quot;) print(eSPC_Tconc_kds_plot) ggsave(&quot;./eSPC_Kd_plot.jpeg&quot;, eSPC_Tconc_kds_plot, device=&quot;jpeg&quot;, width = 120, height = 90, units = c(&quot;mm&quot;)) ggsave(&quot;./eSPC_Kd_plot.ps&quot;, eSPC_Tconc_kds_plot, device=&quot;ps&quot;, width = 120, height = 90, units = c(&quot;mm&quot;)) Affinities obtained by isothermal analysis at different temperatures. 2.10 export data for comparison eSPC_PHvalues &lt;- tribble(~pHstring, ~PHvalues, &quot;PH5&quot;, 5.1) prometheus_T_mean_export &lt;- prometheus_T_mean_precolpolot %&gt;% dplyr::select(., NTF2group, ligandgroup, PHvalues, value = ip_diff, value_min = ip_min, value_max = ip_max) %&gt;% dplyr::mutate(., method = &quot;bnDSF&quot;, value_type = &quot;dTm&quot;) eSPC_export &lt;- eSPC_sel_preplot.tib %&gt;% dplyr::mutate(parameters = purrr::map(paramters, ~dplyr::select(., everything(), Kd = contains(&quot;Kd&quot;)))) %&gt;% dplyr::select(., -data, -fit, -paramters) %&gt;% unnest(., parameters) %&gt;% left_join(., eSPC_PHvalues) %&gt;% dplyr::select(., NTF2group, ligandgroup, PHvalues, Kd, temperature) %&gt;% dplyr::group_by(., NTF2group, ligandgroup, PHvalues) %&gt;% dplyr::summarize(., value = mean(Kd), value_min = min(Kd), value_max = max(Kd)) %&gt;% dplyr::mutate_at(c(&quot;value&quot;, &quot;value_min&quot;, &quot;value_max&quot;), log10) %&gt;% dplyr::mutate(., method = &quot;bnDSF&quot;, value_type = &quot;affinity&quot;) %&gt;% dplyr::mutate(., NTF2group = str_replace_all(NTF2group, &quot;aNTF2&quot;, &quot;aWT&quot;)) nanoDSF_export &lt;- prometheus_T_mean_export %&gt;% full_join(., eSPC_export) saveRDS(nanoDSF_export, &quot;./nanoDSF_export.rds&quot;) 3 Analysis of immunoprecipitation data Immunoprecipiation data collected by MD Panas. Data were imported and visualized for easier comparison with the other data. Note: Data were labeled as pulldowns, but are in fact immuno-precipitation. pulldown_list = list.files(path = &quot;./data_pulldowns&quot;, pattern = &quot;*&quot;, recursive = TRUE, include.dirs = TRUE, full.names = TRUE) pulldown_list.tib &lt;- as_tibble(pulldown_list) pulldown_coladd &lt;- tribble(~filtername, ~datasetid, ~range, ~colnames, ~collection, &quot;pulldowns_combined.xlsx&quot;, 1, &quot;A2:E71&quot;, c(&quot;plate&quot;, &quot;PHvalues&quot;, &quot;value&quot;, &quot;ligandgroup&quot;, &quot;NTF2group&quot;), &quot;MP2&quot;, &quot;pulldowns_mutantcontrol.xlsx&quot;, 1, &quot;A2:E16&quot;, c(&quot;plate&quot;, &quot;aWT&quot;, &quot;bH31A&quot;, &quot;cH31YH62Y&quot;, &quot;ligandgroup&quot;), &quot;MP1&quot; ) ### note ### make sure to select the correct normalization filterselection! MP1/MP2 pulldown_data.tib &lt;- pulldown_list.tib %&gt;% dplyr::mutate(., filtername = str_replace_all(value, &quot;./data_pulldowns/&quot;, replacement = &quot;&quot;)) %&gt;% right_join(., pulldown_coladd) %&gt;% dplyr::mutate(., data = purrr::pmap(list(value, datasetid, range, colnames), read_xlsx)) pulldown_data_norm1 &lt;- pulldown_data.tib %&gt;% dplyr::filter(.,collection == &quot;MP2&quot;) %&gt;% dplyr::select(., collection, datasetid, data) %&gt;% unnest(., data) %&gt;% dplyr::filter(., (plate != &quot;unknown&quot; &amp; PHvalues == 7| plate == &quot;unknown&quot;) &amp; NTF2group == &quot;aWT&quot;) %&gt;% dplyr::mutate(., norm1 = value) %&gt;% dplyr::select(., !c(&quot;PHvalues&quot;, &quot;value&quot;, &quot;NTF2group&quot;)) pulldown_data_norm2 &lt;- pulldown_data.tib %&gt;% dplyr::filter(.,collection == &quot;MP2&quot;) %&gt;% dplyr::select(., collection, datasetid, data) %&gt;% unnest(., data) %&gt;% dplyr::filter(., (plate != &quot;unknown&quot; &amp; PHvalues == 7| plate == &quot;unknown&quot;)) %&gt;% dplyr::mutate(., norm2 = value) %&gt;% dplyr::select(., !c(&quot;PHvalues&quot;, &quot;value&quot;)) pulldown_data_normalized.tib &lt;- pulldown_data.tib %&gt;% dplyr::filter(.,collection == &quot;MP2&quot;) %&gt;% dplyr::select(., collection, datasetid, data) %&gt;% unnest(., data) %&gt;% left_join(., pulldown_data_norm1) %&gt;% left_join(., pulldown_data_norm2) %&gt;% dplyr::mutate(., value_norm1 = value/norm1, value_norm2 = value/norm2) %&gt;% dplyr::select(., !c(&quot;value&quot;)) %&gt;% pivot_longer(., cols = c(&quot;value_norm1&quot;, &quot;value_norm2&quot;), names_to = &quot;normalization&quot;, values_to = &quot;value&quot;) %&gt;% dplyr::select(., !c(&quot;norm1&quot;, &quot;norm2&quot;)) pulldown_mutantcontrol.tib &lt;- pulldown_data.tib %&gt;% dplyr::filter(., collection == &quot;MP1&quot;) %&gt;% unnest(., data) %&gt;% dplyr::select(., !c(&quot;value&quot;, &quot;filtername&quot;, &quot;range&quot;, &quot;colnames&quot;)) %&gt;% pivot_longer(., c(&quot;aWT&quot;, &quot;bH31A&quot;, &quot;cH31YH62Y&quot;), names_to = &quot;NTF2group&quot;, values_to = &quot;value&quot;) %&gt;% dplyr::mutate(., PHvalues = 7, normalization = &quot;value_norm1&quot;) pulldown_data_normalized_mean.tib &lt;- pulldown_data_normalized.tib %&gt;% full_join(., pulldown_mutantcontrol.tib) %&gt;% drop_na(., value) %&gt;% dplyr::group_by(., collection, datasetid, PHvalues, ligandgroup, NTF2group, normalization) %&gt;% dplyr::summarize(., value_mean = mean(value, na.rm=TRUE), value_sd = sd(value, na.rm = TRUE)) %&gt;% dplyr::mutate(., value_min = value_mean-value_sd, value_max = value_mean+value_sd) %&gt;% ungroup() %&gt;% dplyr::mutate(., PHmod = case_when(PHvalues == 7.4 ~ 7.6, TRUE ~ PHvalues)) %&gt;% dplyr::filter(., ligandgroup != &quot;dUBAP2L&quot;) 3.1 IP plots LIGcolor_scale &lt;- tribble(~name, ~value, c( &quot;aNONE&quot;, &quot;bUSP&quot;, &quot;cCAP&quot;, &quot;scale&quot;), c(&quot;#D1D1D1&quot; ,&quot;#B9C9AD&quot;,&quot;#3FC6D8&quot;, &quot;#FFFFFF00&quot;)) %&gt;% unnest(., name, value) %&gt;% deframe() pulldown_plot &lt;- ggplot() + geom_col(data = pulldown_data_normalized_mean.tib, aes(x = PHvalues, y = value_mean, fill = ligandgroup), position = &quot;dodge&quot;, colour = &quot;black&quot;) + geom_errorbar(data = pulldown_data_normalized_mean.tib, aes(x = PHvalues, ymin=value_mean, ymax = value_max, group = ligandgroup), position = &quot;dodge&quot;, size = 0.5) + #geom_point(data = pulldown_data_normalized_mean.tib %&gt;% dplyr::group_by(NTF2group, PHvalues, normalization) %&gt;% dplyr::summarize(., datasetid = unique(datasetid)) %&gt;% dplyr::mutate(., value = 0, method = case_when(PHvalues &gt; 7.5 ~ &quot;aPHwash&quot;, TRUE ~ &quot;bini&quot;)),aes(x = PHvalues, y = value, colour = method), size = 2) + #scale_color_grey() + scale_color_manual(values = c(&quot;red&quot;, &quot;black&quot;)) + scale_fill_manual(values = LIGcolor_scale) + #scale_x_log10() + scale_y_continuous(minor_breaks = NULL) + scale_x_continuous(breaks = c(5,6,7,8,9)) + coord_cartesian(xlim = c(4.5,9)) + #geom_vline(xintercept = 8, size = 1) + #coord_cartesian() + theme_light() + theme(panel.grid.major.y = element_line(colour = &quot;grey50&quot;)) + #legend.position = &quot;null&quot; #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(normalization+collection ~ NTF2group, scales = &quot;free_y&quot;) print(pulldown_plot) ggsave(&quot;./pulldown_plot.jpeg&quot;, pulldown_plot, device=&quot;jpeg&quot;, width = 150, height = 75, units = c(&quot;mm&quot;)) ggsave(&quot;./pulldown_plot.ps&quot;, pulldown_plot, device=&quot;ps&quot;, width = 150, height = 75, units = c(&quot;mm&quot;)) Relative intensities of IPs versus pH. 3.2 IP stats filter_outlier_f &lt;- function(df, outlier){ df_out &lt;- df %&gt;% left_join(., outlier) %&gt;% dplyr::mutate(., filterme = case_when(is.outlier == &quot;TRUE&quot; &amp; is.extreme == &quot;TRUE&quot; ~ &quot;YES&quot;, TRUE ~ &quot;NO&quot;)) %&gt;% dplyr::filter(., filterme == &quot;NO&quot;) return(df_out) } statix_data_f &lt;- function(df){ df_out &lt;- df %&gt;% dplyr::select(., !c(&quot;datasetid&quot;)) %&gt;% dplyr::mutate(., group = as.factor(PHvalues)) %&gt;% dplyr::select(., !c(&quot;PHvalues&quot;)) %&gt;% dplyr::group_by(., ligandgroup) return(df_out) } pulldown_data_prestats.tib &lt;- pulldown_data_normalized.tib %&gt;% full_join(., pulldown_mutantcontrol.tib) %&gt;% drop_na(., value) %&gt;% dplyr::select(., !c(&quot;plate&quot;)) %&gt;% dplyr::group_by(., collection, NTF2group, normalization) %&gt;% nest() %&gt;% dplyr::mutate(., data_stats = purrr::pmap(list(data), statix_data_f )) # %&gt;% dplyr::mutate(., data_gate = purrr::map(data, ~dplyr::group_by(., labelcolor))) pulldown_data_anova.stats &lt;- pulldown_data_prestats.tib %&gt;% dplyr::filter(., collection == &quot;MP2&quot;, normalization == &quot;value_norm1&quot;) %&gt;% dplyr::mutate(., outliers = purrr::map(data_stats, ~identify_outliers(., value)), tukeytest = purrr::map(data_stats, ~tukey_hsd(., value ~ group)), kruskaltest = purrr::map(data_stats, ~kruskal_test(., value ~ group))) p_label_y &lt;- tribble(~groupid, ~value, c(1,2), c(1.2, 1.3)) p_label_y &lt;- p_label_y %&gt;% unnest(., c(&quot;groupid&quot;, &quot;value&quot;)) pulldown_data_anova_toPlot &lt;- pulldown_data_anova.stats %&gt;% dplyr::select(., !c(&quot;data&quot;, &quot;data_stats&quot;, &quot;outliers&quot;, &quot;kruskaltest&quot;)) %&gt;% unnest(., c(&quot;tukeytest&quot;)) %&gt;% dplyr::filter(., p.adj.signif != &quot;ns&quot;) %&gt;% dplyr::select(., c(&quot;collection&quot;, &quot;NTF2group&quot;, &quot;normalization&quot;, &quot;ligandgroup&quot;, &quot;group1&quot;, &quot;group2&quot;, &quot;p.adj.signif&quot;)) %&gt;% dplyr::mutate(., groupid = row_number()) %&gt;% pivot_longer(., cols = c(&quot;group1&quot;, &quot;group2&quot;), names_to = &quot;groups&quot;, values_to = &quot;PHvalues&quot;) %&gt;% dplyr::select(., !c(&quot;groups&quot;)) %&gt;% left_join(., p_label_y) %&gt;% dplyr::mutate(., PHvalues = as.numeric(PHvalues)) pulldown_plot2 &lt;- ggplot() + geom_col(data = pulldown_data_normalized_mean.tib, aes(x = PHvalues, y = value_mean, fill = ligandgroup), position = &quot;dodge&quot;, colour = &quot;black&quot;) + geom_errorbar(data = pulldown_data_normalized_mean.tib, aes(x = PHvalues, ymin=value_mean, ymax = value_max, group = ligandgroup), position = &quot;dodge&quot;, size = 0.5) + geom_line(data = pulldown_data_anova_toPlot, aes(x = PHvalues, y = value, group = groupid, colour = ligandgroup), size = 0.25) + geom_text(data = pulldown_data_anova_toPlot %&gt;% dplyr::group_by(., collection, NTF2group, normalization, groupid) %&gt;% dplyr::summarize(., PHvalues = mean(PHvalues), value = mean(value), p.adj.signif = unique(p.adj.signif)), aes(x = PHvalues, y = value, group = groupid, label = p.adj.signif ), size = 2) + #geom_point(data = pulldown_data_normalized_mean.tib %&gt;% dplyr::group_by(NTF2group, PHvalues, normalization) %&gt;% dplyr::summarize(., datasetid = unique(datasetid)) %&gt;% dplyr::mutate(., value = 0, method = case_when(PHvalues &gt; 7.5 ~ &quot;aPHwash&quot;, TRUE ~ &quot;bini&quot;)),aes(x = PHvalues, y = value, colour = method), size = 2) + #scale_color_grey() + scale_color_manual(values = c(&quot;red&quot;, &quot;black&quot;)) + scale_fill_manual(values = LIGcolor_scale) + scale_colour_manual(values = LIGcolor_scale) + #scale_x_log10() + scale_y_continuous(minor_breaks = NULL) + scale_x_continuous(breaks = c(5,6,7,8,9)) + coord_cartesian(xlim = c(4.5,9)) + #geom_vline(xintercept = 8, size = 1) + #coord_cartesian() + theme_light() + theme(panel.grid.major.y = element_line(colour = &quot;grey50&quot;)) + #legend.position = &quot;null&quot; #coord_flip(xlim = c(4,8), ylim = c(20,80)) + facet_grid(normalization+collection ~ NTF2group, scales = &quot;free_y&quot;) print(pulldown_plot2) ggsave(&quot;./pulldown_plot2.jpeg&quot;, pulldown_plot2, device=&quot;jpeg&quot;, width = 150, height = 75, units = c(&quot;mm&quot;)) ggsave(&quot;./pulldown_plot2.ps&quot;, pulldown_plot2, device=&quot;ps&quot;, width = 150, height = 75, units = c(&quot;mm&quot;)) Relative intensities of IPs versus pH. plus ANOVA. Plots were saved as postscript files, and edited into publication-quality figures using Adobe Illustrator. The bookdown document was created based on bookdown, and rtemps. Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot. "]]
